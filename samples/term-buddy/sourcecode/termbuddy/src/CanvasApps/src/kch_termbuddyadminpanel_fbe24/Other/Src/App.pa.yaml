# ************************************************************************************************
# Warning: YAML source code for Canvas Apps is in preview. The schema is being actively developed.
# Content may be incomplete and subject to change.
# This file is read-only and should only be used to review changes made within Power Apps Studio.
# This file isn't used when loading the app. External editing, merging and conflict resolution are
# not supported.
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
App:
  Properties:
    Formulas: "=nfAppVersion = \" v2.04 (\" & nfCurrentEnv & \")\";\r\n\r\nnfEnvID = Right(\r\n    Match(\r\n        First('Canvas Apps').AppOpenUri,\r\n        \"/e/.*(?=/a)\"\r\n    ).FullMatch,36\r\n);\r\n\r\nnfEnvironments = {\r\n    DEV:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_environments\"\r\n        ).Value\r\n    ).dev,\r\n    UAT:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_environments\"\r\n        ).Value\r\n    ).uat,\r\n    PROD:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_environments\"\r\n        ).Value\r\n    ).prod\r\n};\r\n\r\nnfCurrentEnv = \r\nSwitch(\r\n    true,\r\n    nfEnvID = nfEnvironments.DEV, \"DEV\",\r\n    nfEnvID = nfEnvironments.UAT, \"UAT\",\r\n    nfEnvID = nfEnvironments.PROD, \"PROD\",\r\n    \"Unknown\" // Default case if no match is found\r\n);\r\n\r\nnfColor = {\r\n    Primary:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Primary',\r\n\r\n    Secondary:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Secondary',\r\n\r\n    Regular:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Regular',\r\n\r\n    Light:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Light',\r\n\r\n    White:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'White',\r\n\r\n    Accent1:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Accent1',\r\n\r\n    Accent2:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Accent2',\r\n\r\n    Accent3:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Accent3',\r\n\r\n    Accent4:\r\n    ParseJSON(\r\n        LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_colorschema\"\r\n        ).Value\r\n    ).'Accent4'\r\n};\r\n\r\nnfTheming = {\r\n    // General parameters\r\n    radius: 24,\r\n    backFill: ColorValue(Concatenate(nfColor.White, \"A6\")),\r\n    layoutGap: 32,\r\n    controlPadding: 48,\r\n    \r\n    // Menu parameters\r\n    menuWidth: 100,\r\n    menuLogo: logo,\r\n    menuLogoPadding: 24,\r\n\r\n    // Instruction screen - Prompt input control\r\n    maxLength: 2000,\r\n    threshold: 200,\r\n\r\n    // Analytics - Metrics\r\n    metricsPadding: 5\r\n};\r\n\r\nnfKeyVault =\r\n    LookUp(\r\n        'Environment Variable Values',\r\n        'Environment Variable Definition'.'Schema Name' = \"kch_endpointsecret\"\r\n    ).Value;\r\n\r\nnfAppData = {\r\n    // Instruction screen - Prompt input control\r\n    userPrompt: First('termbuddy-prompts').'user-prompt',\r\n\r\n    // Settings screen - Installation Mode\r\n    demoMode: LookUp(\r\n            'Environment Variable Values',\r\n            'Environment Variable Definition'.'Schema Name' = \"kch_demobackend\"\r\n        ).Value,\r\n    \r\n    demoModeValues: Table(\r\n        {\r\n            name: \"Default Installation (Developer-Managed)\",\r\n            mode: \"no\"\r\n        },\r\n        {\r\n            name: \"Customer-Managed Installation\",\r\n            mode: \"yes\"\r\n        }\r\n    ),\r\n\r\n    // Settings page - Endpoint data (customer-managed installation)\r\n\r\n    endpointCMI: {\r\n        endpoint:\r\n            LookUp(\r\n                'Environment Variable Values',\r\n                'Environment Variable Definition'.'Schema Name' = \"kch_endpoint\"\r\n            ).Value,\r\n        model:\r\n            LookUp(\r\n                'Environment Variable Values',\r\n                'Environment Variable Definition'.'Schema Name' = \"kch_model\"\r\n            ).Value\r\n    },\r\n\r\n    // Settings screen - Azure Key Vault Data\r\n    keyVault: \r\n        If(\r\n            IsBlank(nfKeyVault),\r\n            {\r\n                subscription: \"\",\r\n                resource_group: \"\",\r\n                key_vault: \"\",\r\n                secret: \"\"\r\n            },\r\n            With(\r\n                {parts: Split(nfKeyVault, \"/\")},\r\n                {\r\n                    subscription: Index(parts, 3).Value,\r\n                    resource_group: Index(parts, 5).Value,\r\n                    key_vault: Index(parts, 9).Value,\r\n                    secret: Index(parts, 11).Value\r\n                }\r\n            )\r\n        ),\r\n\r\n    // Analytics screen - Analytics Period options\r\n    analyticsRanges: Table(\r\n        {\r\n            id: 1,\r\n            name: \"Today\",\r\n            days: 0,\r\n            startDate: DateAdd(Today(), -1),\r\n            endDate: DateAdd(Today(), 1)\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Last 7 days\",\r\n            days: 7,\r\n            startDate: DateAdd(Today(), -7),\r\n            endDate: DateAdd(Today(), 1)\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Last 30 days\",\r\n            days: 30,\r\n            startDate: DateAdd(Today(), -30),\r\n            endDate: DateAdd(Today(), 1)\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Last 90 days\",\r\n            days: 90,\r\n            startDate: DateAdd(Today(), -90),\r\n            endDate: DateAdd(Today(), 1)\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Last 12 months\",\r\n            days: 365,\r\n            startDate: DateAdd(Today(), -365),\r\n            endDate: DateAdd(Today(), 1)\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"All time\",\r\n            days: 1000,\r\n            startDate: DateAdd(Today(), -1000),\r\n            endDate: DateAdd(Today(), 1)\r\n        }\r\n    ),\r\n\r\n    // Analytics screen - Metrics\r\n    analyticsMetrics: Table(\r\n        {\r\n            id: 1,\r\n            name: \"Sessions\",\r\n            value: 0\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Messages\",\r\n            value: 0\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Quizzes\",\r\n            value: 0\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Examples\",\r\n            value: 0\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Renews definition\",\r\n            value: 0\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Terms\",\r\n            value: 0\r\n        }\r\n    )\r\n};\r\n\r\nudfMetricsCountSchema := Type(\r\n    [\r\n        {\r\n            metric: Text,\r\n            count: Number\r\n        }\r\n    ]\r\n);\r\n\r\nudfMetricsCount(days:Number, startDate:Date, endDate:Date):udfMetricsCountSchema = \r\nTable(\r\n    {\r\n        metric: \"Sessions\",\r\n        count:\r\n            Switch(\r\n                days,\r\n                1000,\r\n                CountRows(\r\n                    Distinct(\r\n                        'termbuddy-statistics',\r\n                        conversation_id\r\n                    )\r\n                ),\r\n                CountRows(\r\n                    Distinct(\r\n                        Filter(\r\n                            'termbuddy-statistics',\r\n                            CreatedDateTime >= startDate && CreatedDateTime <= endDate\r\n                        ),conversation_id\r\n                    )\r\n                )\r\n            )\r\n    },\r\n    {\r\n        metric: \"Messages\",\r\n        count:\r\n            Switch(\r\n                days,\r\n                1000,\r\n                CountIf('termbuddy-statistics', true),\r\n                CountIf(\r\n                    'termbuddy-statistics',\r\n                    CreatedDateTime >= startDate && CreatedDateTime <= endDate\r\n                )\r\n            )\r\n    },\r\n    {\r\n        metric: \"Quizes\",\r\n        count:\r\n            Switch(\r\n                days,\r\n                1000,\r\n                CountIf(\r\n                    'termbuddy-statistics',\r\n                    action = \"quiz\"\r\n                ),\r\n                CountIf(\r\n                    'termbuddy-statistics',\r\n                    CreatedDateTime >= startDate && CreatedDateTime <= endDate && action = \"quiz\"\r\n                )\r\n            )\r\n    },\r\n    {\r\n        metric: \"Examples\",\r\n        count:\r\n            Switch(\r\n                days,\r\n                1000,\r\n                CountIf(\r\n                    'termbuddy-statistics',\r\n                    action = \"example\"\r\n                ),\r\n                CountIf(\r\n                    'termbuddy-statistics',\r\n                    CreatedDateTime >= startDate && CreatedDateTime <= endDate && action = \"example\"\r\n                )\r\n            )\r\n    },\r\n    {\r\n        metric: \"Refreshes\",\r\n        count:\r\n            Switch(\r\n                days,\r\n                1000,\r\n                CountIf(\r\n                    'termbuddy-statistics',\r\n                    action = \"refresh\"\r\n                ),\r\n                CountIf(\r\n                    'termbuddy-statistics',\r\n                    CreatedDateTime >= startDate && CreatedDateTime <= endDate && action = \"refresh\"\r\n                )\r\n            )\r\n    },\r\n    {\r\n        metric: \"Terms\",\r\n        count:\r\n            Switch(\r\n                days,\r\n                1000,\r\n                CountRows(\r\n                    Distinct(\r\n                        'termbuddy-statistics',\r\n                        term\r\n                    )\r\n                ),\r\n                CountRows(\r\n                    Distinct(\r\n                        Filter(\r\n                            'termbuddy-statistics',\r\n                            CreatedDateTime >= startDate && CreatedDateTime <= endDate\r\n                        ),term\r\n                    )\r\n                )\r\n            )\r\n    }\r\n);\r\n\r\nnfMenu = Table(\r\n    {\r\n        id: 1,\r\n        name: \"Analytics\",\r\n        path: \"<path d='M4 11H2v3h2zm5-4H7v7h2zm5-5v12h-2V2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1z'/>\",\r\n        screen: Analytics\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Prompt refinement\",\r\n        path: \"<path d='M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5M5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1z'/>\r\n  <path d='M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1'/>\",\r\n        screen: 'Prompt refinement'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Settings\",\r\n        path: \"<path d='M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0'/>\r\n<path d='M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z'/>\",\r\n        screen: Settings\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"About\",\r\n        path: \"<path d='M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16'/>\r\n        <path d='m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0'/>\",\r\n        screen: About\r\n    }\r\n);\r\n\r\n// Characters count functionality\r\nudfNotificationAssets := Type(\r\n    [\r\n        {\r\n            message: Text,\r\n            color: Color\r\n        }\r\n    ]\r\n);\r\n\r\nudfLengthNotification(paramText:Text):udfNotificationAssets = With(\r\n    {\r\n        remainingChars: nfTheming.maxLength - Len(paramText)\r\n    },\r\n    Table(\r\n        {\r\n            message:\r\n            Switch(\r\n                true, \r\n                remainingChars <= nfTheming.maxLength && remainingChars > nfTheming.threshold, $\"✅ Keep going! {remainingChars} characters left\",\r\n                remainingChars <= nfTheming.threshold && remainingChars > 0, $\"⚠️ Almost full! {remainingChars} characters left\",\r\n                \"❌ Limit reached! No more characters can be entered.\"\r\n            ),\r\n            color:\r\n            Switch(\r\n                true, \r\n                remainingChars <= nfTheming.maxLength && remainingChars > nfTheming.threshold, nfColor.Accent2,\r\n                nfColor.Secondary\r\n            )\r\n        }\r\n    )\r\n);\r\n\r\nudfLengthNotification2(paramText:Text):Text = With(\r\n    {\r\n        threshold: nfTheming.maxLength * 0.25, // 25% of maxLength\r\n        remainingChars: nfTheming.maxLength - Len(paramText)\r\n    },\r\n    Switch(\r\n        true, \r\n        remainingChars >= threshold, $\"✅ Keep going! {remainingChars} characters left\",\r\n        remainingChars > 0, $\"⚠️ Almost full! {remainingChars} characters left\",\r\n        \"❌ Limit reached! No more characters can be entered.\"\r\n    )\r\n);"
    Theme: ='Term Buddy'
