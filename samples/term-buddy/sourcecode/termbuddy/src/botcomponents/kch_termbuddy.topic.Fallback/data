kind: AdaptiveDialog
beginDialog:
  kind: OnUnknownIntent
  id: main
  actions:
    - kind: InvokeFlowAction
      id: invokeFlowAction_tIUwYF
      displayName: Get user prompt
      input: {}
      output:
        binding:
          output_userprompt: Global.gv_userprompt

      flowId: d0342a48-e8ee-ef11-be21-000d3a5a6d80

    - kind: SetVariable
      id: setVariable_JL1FSe
      displayName: Update question variable
      variable: Global.gv_question
      value: |-
        =If(
            Global.gv_action = "new_term",
            System.Activity.Text
        )

    - kind: HttpRequestAction
      id: FjBsk0
      displayName: HTTP Request to Prompt Flow Endpoint
      method: Post
      url: |-
        =If(
            Env.kch_demobackend, 
            Env.kch_demoendpoint, 
            Env.kch_endpoint
        )
      headers:
        Authorization: |-
          ="Bearer " & If(
              Env.kch_demobackend, 
              Env.kch_demokey, 
              Env.kch_endpointsecret
          )
        azureml-model-deployment: |-
          =If(
              Env.kch_demobackend, 
              Env.kch_demomodel, 
              Env.kch_model
          )
        Content-Type: application/json

      body:
        kind: JsonRequestContent
        content: |-
          ={
              chat_history: Global.history,
              question: Global.gv_question,
              user_prompt: Global.gv_userprompt,
              temperature: 0.5,
              action: Global.gv_action,
              term: Global.gv_term
          }

      requestTimeoutInMilliseconds: 50000
      response: Topic.tv_response
      responseSchema:
        kind: Record
        properties:
          answer: String

    - kind: ParseValue
      id: M5jAko
      displayName: Parse response
      variable: Topic.tv_parsed_response
      valueType:
        kind: Record
        properties:
          definition: String
          example: String
          other: String
          term: String

      value: =Topic.tv_response.answer

    - kind: ConditionGroup
      id: conditionGroup_KXtuLz
      conditions:
        - id: conditionItem_JfPfFu
          condition: =!IsBlank(Topic.tv_parsed_response.term)
          actions:
            - kind: SetVariable
              id: setVariable_jHYUy4
              variable: Global.gv_term
              value: =Topic.tv_parsed_response.term

    - kind: InvokeFlowAction
      id: invokeFlowAction_fxoM56
      input:
        binding:
          text: =Global.gv_term
          text_1: =Global.gv_action
          text_2: N/A
          text_3: =System.Conversation.Id
          text_4: new
          text_5: N/A

      output:
        binding:
          pf_new_row_id: Topic.pf_new_row_id

      flowId: 1098292b-67f0-ef11-be21-6045bd05ae4f

    - kind: SetVariable
      id: setVariable_UmwtiG
      displayName: Update chat history
      variable: Global.history
      value: |-
        =Table(
            Global.history,
            {
                inputs: {
                    question: Global.gv_question,
                    user_prompt: Global.gv_userprompt,
                    temperature: 0.5,
                    action: Global.gv_action,
                    term: Global.gv_term
                },
                outputs: { 
                    answer: Topic.tv_response.answer 
                }
            }
        )

    - kind: AdaptiveCardPrompt
      id: fVMc98
      displayName: Send response
      repeatCount: 0
      card: |-
        ={
          type: "AdaptiveCard",
          body: [
            {
              type: "TextBlock",
              size: "Large",
              weight: "Bolder",
              text: Topic.tv_parsed_response.term
            },
            {
              type: "TextBlock",
              text: Topic.tv_parsed_response.definition,
              wrap: true
            },
            {
              type: "TextBlock",
              text: If(
                Global.gv_action = "example",
                Topic.tv_parsed_response.example,
                Topic.tv_parsed_response.other
              ),
              wrap: true
            },
            {
              type: "TextBlock",
              text: "Generated by AI",
              wrap: true,
              fontType: "Monospace",
              size: "Small",
              isSubtle: true,
              horizontalAlignment: "Right"
            },
            {
              type: "ActionSet",
              actions: [
                  {
                      type: "Action.Submit",
                      title: "Quiz"
                  },
                  {
                      type: "Action.Submit",
                      title: "Example"
                  },
                  {
                      type: "Action.Submit",
                      title: "Renew definition"
                  },
                  {
                      type: "Action.Submit",
                      title: "Start over"
                  }
              ]
            }
          ],
          '$schema': "http://adaptivecards.io/schemas/adaptive-card.json",
          version: "1.0"
        }
      output:
        binding:
          actionSubmitId: Topic.actionSubmitId

      outputType:
        properties:
          actionSubmitId: String

    - kind: ConditionGroup
      id: conditionGroup_yyQdAh
      conditions:
        - id: conditionItem_YWWg7r
          condition: =Topic.actionSubmitId = "Quiz"
          displayName: Branch - Quiz
          actions:
            - kind: SetVariable
              id: setVariable_l7QOmR
              variable: Global.gv_action
              value: quiz

            - kind: SendActivity
              id: sendActivity_Ek27la
              activity: Nice choice! Let me prepare a small quiz for you.

            - kind: BeginDialog
              id: lzUlCc
              dialog: kch_termbuddy.topic.quiz

        - id: conditionItem_2iaK8B
          condition: =Topic.actionSubmitId = "Example"
          displayName: Branch - Examples
          actions:
            - kind: SetVariable
              id: setVariable_fupn4G
              variable: Global.gv_action
              value: example

            - kind: SendActivity
              id: sendActivity_m09J4C
              activity: Got it! Let me prepare a good example for you.

            - kind: GotoAction
              id: pZFxG6
              actionId: FjBsk0

        - id: conditionItem_2x9xfW
          condition: =Topic.actionSubmitId = "Renew definition"
          displayName: Branch - Refresh
          actions:
            - kind: SetVariable
              id: setVariable_XUxtik
              variable: Global.gv_action
              value: refresh

            - kind: SendActivity
              id: sendActivity_6Byhbg
              activity: Sure! Let me rephrase it.

            - kind: GotoAction
              id: WOOuLH
              actionId: FjBsk0

        - id: conditionItem_Af8215
          condition: =Topic.actionSubmitId = "Start over"
          actions:
            - kind: BeginDialog
              id: 4MUFcl
              dialog: kch_termbuddy.topic.StartOver

      elseActions:
        - kind: SetVariable
          id: setVariable_shBrzp
          variable: Global.gv_action
          value: new_term

        - kind: GotoAction
          id: naiybr
          actionId: setVariable_JL1FSe

    - kind: EndConversation
      id: Km5d6l