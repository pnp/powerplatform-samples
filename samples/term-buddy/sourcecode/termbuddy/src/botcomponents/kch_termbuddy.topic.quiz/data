kind: AdaptiveDialog
beginDialog:
  kind: OnRedirect
  id: main
  actions:
    - kind: SetVariable
      id: setVariable_d7BZaI
      variable: Topic.tv_action
      value: =Global.gv_action

    - kind: HttpRequestAction
      id: PBAQPR
      method: Post
      url: |-
        =If(
            Env.kch_demobackend, 
            Env.kch_demoendpoint, 
            Env.kch_endpoint
        )
      headers:
        Authorization: |-
          ="Bearer " & If(
              Env.kch_demobackend, 
              Env.kch_demokey, 
              Env.kch_endpointsecret
          )
        azureml-model-deployment: |-
          =If(
              Env.kch_demobackend, 
              Env.kch_demomodel, 
              Env.kch_model
          )
        Content-Type: application/json

      body:
        kind: JsonRequestContent
        content: |-
          ={
              chat_history: Global.history,
              question: Global.gv_question,
              user_prompt: Global.gv_userprompt,
              temperature: 0.5,
              action: Global.gv_action,
              term: Global.gv_term
          }

      requestTimeoutInMilliseconds: 50000
      response: Topic.tv_quiz_response
      responseSchema:
        kind: Record
        properties:
          answer: String

    - kind: ParseValue
      id: f1NrBt
      variable: Topic.tv_quiz_options
      valueType:
        kind: Record
        properties:
          answers:
            type:
              kind: Table
              properties:
                explanation: String
                is_correct: Boolean
                option: String

          question: String
          term: String

      value: =Topic.tv_quiz_response.answer

    - kind: ConditionGroup
      id: conditionGroup_teejzm
      conditions:
        - id: conditionItem_AvBM7T
          condition: =IsBlank(Topic.tv_quiz_options.question)
          actions:
            - kind: GotoAction
              id: Jo584b
              actionId: PBAQPR

    - kind: InvokeFlowAction
      id: invokeFlowAction_ZCypiL
      displayName: Log telemetry - new quiz
      input:
        binding:
          text: =Global.gv_term
          text_1: =Global.gv_action
          text_2: N/A
          text_3: =System.Conversation.Id
          text_4: new
          text_5: N/A

      output:
        binding:
          pf_new_row_id: Topic.pf_new_row_id

      flowId: 1098292b-67f0-ef11-be21-6045bd05ae4f

    - kind: AdaptiveCardPrompt
      id: cTE5ZI
      displayName: Adaptive Card - send quiz
      repeatCount: 0
      card: |-
        ={
          type: "AdaptiveCard",
          body: [
            {
              type: "TextBlock",
              text: "✅ Let’s test your knowledge! Select the correct answer.",
              wrap: true,
              separator: true
            },
            {
              type: "TextBlock",
              size: "Medium",
              weight: "Bolder",
              wrap: true,
              style: "heading",
              text: Topic.tv_quiz_options.question
            },
            {
              type: "TextBlock",
              text: "Option 1:",
              wrap: true,
              weight: "Bolder"
            },
            {
              type: "TextBlock",
              text: Index(Topic.tv_quiz_options.answers, 1).option,
              wrap: true
            },
            {
              type: "TextBlock",
              text: "Option 2:",
              wrap: true,
              weight: "Bolder"
            },
            {
              type: "TextBlock",
              text: Index(Topic.tv_quiz_options.answers, 2).option,
              wrap: true
            },
            {
              type: "TextBlock",
              text: "Option 3:",
              wrap: true,
              weight: "Bolder"
            },
            {
              type: "TextBlock",
              text: Index(Topic.tv_quiz_options.answers, 3).option,
              wrap: true
            },
            {
              type: "TextBlock",
              text: "Generated by AI",
              wrap: true,
              fontType: "Monospace",
              size: "Small",
              isSubtle: true,
              horizontalAlignment: "Right"
            },
            {
              type: "ActionSet",
              actions: [
                {
                  type: "Action.Submit",
                  title: "Option 1"
                },
                {
                  type: "Action.Submit",
                  title: "Option 2"
                },
                {
                  type: "Action.Submit",
                  title: "Option 3"
                },
                {
                  type: "Action.Submit",
                  title: "Start over"
                }
              ]
            }
          ],
          '$schema': "http://adaptivecards.io/schemas/adaptive-card.json",
          version: "1.0"
        }
      output:
        binding:
          actionSubmitId: Topic.actionSubmitId

      outputType:
        properties:
          actionSubmitId: String

    - kind: ConditionGroup
      id: conditionGroup_tcG5IP
      conditions:
        - id: conditionItem_jCeB0S
          condition: =Topic.actionSubmitId = "Option 1"
          actions:
            - kind: GotoAction
              id: BiVYOB
              actionId: invokeFlowAction_A2pwHF

        - id: conditionItem_bYJp4p
          condition: =Topic.actionSubmitId = "Option 2"
          actions:
            - kind: GotoAction
              id: EjPuQE
              actionId: invokeFlowAction_A2pwHF

        - id: conditionItem_mv7gMH
          condition: =Topic.actionSubmitId = "Option 3"
          actions:
            - kind: GotoAction
              id: l16oBi
              actionId: invokeFlowAction_A2pwHF

        - id: conditionItem_TW1Czg
          condition: =Topic.actionSubmitId = "Start over"
          actions:
            - kind: BeginDialog
              id: z1ov3U
              dialog: kch_termbuddy.topic.StartOver

      elseActions:
        - kind: BeginDialog
          id: 8wMtUQ
          dialog: kch_termbuddy.topic.StartOver

    - kind: InvokeFlowAction
      id: invokeFlowAction_A2pwHF
      displayName: Log telemetry - selected option
      input:
        binding:
          text: =Global.gv_term
          text_1: =Global.gv_action
          text_2: |-
            =Switch(
                Topic.actionSubmitId,
                "Option 1", 
                    If(
                        Index(Topic.tv_quiz_options.answers, 1).is_correct,
                        "correct",
                        "wrong"
                    ),
                "Option 2", 
                    If(
                        Index(Topic.tv_quiz_options.answers, 2).is_correct,
                        "correct",
                        "wrong"
                    ),
                "Option 3", 
                    If(
                        Index(Topic.tv_quiz_options.answers, 3).is_correct,
                        "correct",
                        "wrong"
                    )
            )
          text_3: =System.Conversation.Id
          text_4: update
          text_5: =Topic.pf_new_row_id

      output:
        binding:
          pf_new_row_id: Topic.pf_new_row_id

      flowId: 1098292b-67f0-ef11-be21-6045bd05ae4f

    - kind: AdaptiveCardPrompt
      id: THlQkI
      displayName: Adaptive Card - send explanation
      card: |-
        ={
          type: "AdaptiveCard",
          '$schema': "http://adaptivecards.io/schemas/adaptive-card.json",
          version: "1.0",
          body: [
            {
              type: "TextBlock",
              text: Topic.actionSubmitId,
              wrap: true,
              size: "Large",
              weight: "Bolder"
            },
            {
              type: "TextBlock",
              text: 
                Switch(
                  Topic.actionSubmitId,
                  "Option 1", Index(Topic.tv_quiz_options.answers, 1).option,
                  "Option 2", Index(Topic.tv_quiz_options.answers, 2).option,
                  "Option 3", Index(Topic.tv_quiz_options.answers, 3).option
                ),
              wrap: true,
              weight: "Bolder"
            },
            {
              type: "TextBlock",
              text: 
                Switch(
                  Topic.actionSubmitId,
                  "Option 1", Index(Topic.tv_quiz_options.answers, 1).explanation,
                  "Option 2", Index(Topic.tv_quiz_options.answers, 2).explanation,
                  "Option 3", Index(Topic.tv_quiz_options.answers, 3).explanation
                ),
              wrap: true
            },
            {
              type: "TextBlock",
              text: "Generated by AI",
              wrap: true,
              fontType: "Monospace",
              size: "Small",
              isSubtle: true,
              horizontalAlignment: "Right"
            },
            {
              type: "TextBlock",
              text: "Want another quiz, an example, or a different term? Just ask!",
              wrap: true
            },
            {
              type: "ActionSet",
              actions: [
                {
                  type: "Action.Submit",
                  title: "New quiz"
                },
                {
                  type: "Action.Submit",
                  title: "Example"
                },
                {
                  type: "Action.Submit",
                  title: "New term"
                }
              ]
            }
          ]
        }
      output:
        binding:
          actionSubmitId: Topic.actionSubmitId

      outputType:
        properties:
          actionSubmitId: String

    - kind: ConditionGroup
      id: conditionGroup_1gkgXS
      conditions:
        - id: conditionItem_OtUSzD
          condition: =Topic.actionSubmitId = "Example"
          actions:
            - kind: SetVariable
              id: setVariable_oWq7Y6
              variable: Global.gv_action
              value: example

            - kind: BeginDialog
              id: b3NAYm
              dialog: kch_termbuddy.topic.Fallback

        - id: conditionItem_P8mOct
          condition: =Topic.actionSubmitId = "New quiz"
          actions:
            - kind: GotoAction
              id: D98JFn
              actionId: PBAQPR

      elseActions:
        - kind: BeginDialog
          id: uF09ad
          dialog: kch_termbuddy.topic.ResetConversation

inputType: {}
outputType: {}